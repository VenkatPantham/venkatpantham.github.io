{"version":3,"file":"static/js/326.9dd8223d.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs"],"sourcesContent":["/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { loadFeatures } from '../../motion/features/load-features.mjs';\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimation } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimation}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimation')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion({ children, features, strict = false }) {\n    const [, setIsLoaded] = useState(!isLazyBundle(features));\n    const loadedRenderer = useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        const { renderer, ...loadedFeatures } = features;\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    useEffect(() => {\n        if (isLazyBundle(features)) {\n            features().then(({ renderer, ...loadedFeatures }) => {\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (React.createElement(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict } }, children));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nexport { LazyMotion };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n"],"names":["sanitize","v","Math","round","floatRegex","colorRegex","singleColorRegex","isString","int","number","transform","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","degrees","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","x","y","z","perspective","transformPerspective","opacity","alpha","originX","progressPercentage","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","optimizedAppearDataAttribute","camelToDash","scrapeMotionValuesFromProps","props","prevProps","newValues","scrapeMotionValuesFromProps$1","key","isMotionValue","transformPropOrder","indexOf","charAt","toUpperCase","substring","isKeyframesTarget","Array","isArray","noop","any","str","replace","toLowerCase","lowercaseSVGElements","isSVGComponent","Component","includes","test","translateAlias","numTransforms","length","getValueAsType","value","type","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","valueAsType","transformProps","has","default","startsWith","_ref","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","undefined","trim","buildTransform","Boolean","getVelocity","renderHTML","element","styleProp","projection","Object","assign","getProjectionStyles","setProperty","createUnitType","unit","endsWith","split","parse","parseFloat","percent","vh","vw","variantPriorityOrder","variantProps","LazyMotion","children","features","strict","setIsLoaded","useState","isLazyBundle","loadedRenderer","useRef","renderer","loadedFeatures","current","loadFeatures","useEffect","then","_ref2","React","LazyContext","Provider","scaleCorrectors","isForcedMotionValue","layout","layoutId","Set","shallowCompare","next","prev","prevLength","resolveVariant","visualElement","definition","custom","getProps","resolveVariantFromProps","values","forEach","get","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","x1","y1","x2","y2","isColorString","testProp","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clamp","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","mix","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","max","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","arguments","transformers","_key","reduce","cssVarTokeniser","regex","cssVariableRegex","countKey","token","colorTokeniser","numberTokeniser","tokenise","info","matches","tokenised","push","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","source","numValues","output","convertNumbersToZero","complex","_a","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","origin","target","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","offset","remaining","min","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","e","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","callback","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","animation","keyframeOptions","animate","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","set","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","filter","functions","join","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","transition","MotionGlobalConfig","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","isNumericalString","SubscriptionManager","constructor","this","subscriptions","handler","item","index","removeItem","notify","numSubscriptions","getSize","clear","collectMotionValues","MotionValue","init","_this","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","render","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","eventName","unsubscribe","read","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","resolved","transitionEnd","makeTargetAnimatable","resolveFinalValueInKeyframes","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","animationState","getState","valueTarget","window","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","remove","all","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","context","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","delete","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","initial","setActive","setAnimateFunction","makeAnimator","Feature","node","isMounted","id","super","updateAnimationControlsSubscription","unmount","subscribe","mount","prevAnimate","presenceContext","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","passive","addEventListener","removeEventListener","extractEventInfo","event","pointType","point","addPointerEvent","pointerType","button","isPrimary","isPrimaryPointer","addPointerInfo","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","isDragActive","openGestureLock","drag","openHorizontal","openVertical","getGlobalLock","addHoverEvent","callbackName","handleEvent","isNodeOrChild","parent","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","onBlur","hover","measureViewportBox","instance","transformPoint","convertBoundingBoxToBox","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","isCSSVariableToken","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","_ref12","isBrowser","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","featureDefinitions","numFeatures","propEventHandlers","numVariantProps","VisualElement","reducedMotionConfig","visualState","isVariantNode","isControllingVariants","Map","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","preloadedFeatures","initialLayoutGroupConfig","ProjectionNodeConstructor","MeasureLayout","renderedProps","isEnabled","FeatureConstructor","ProjectionNode","MeasureLayoutComponent","dragConstraints","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","isRefObject","animationType","initialPromotionConfig","updateFeatures","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getTransformPagePoint","transformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","args","DOMVisualElement","compareDocumentPosition","transformValues","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","isSVGTag","camelCaseAttributes","getAttribute","buildSVGAttrs","renderSVG","tagName","domAnimation","createDomVisualElement","_styleProp","attrs","setAttribute","createContext","isCustomValue","toValue","Queue","order","scheduled","process","stepsOrder","schedule","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","checkStringStartsWith","ref","currentValues","tag","calcOrigin","dashKeys","array","camelKeys","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","featureProps","pan"],"sourceRoot":""}