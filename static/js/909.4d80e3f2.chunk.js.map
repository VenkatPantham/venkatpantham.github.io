{"version":3,"file":"static/js/909.4d80e3f2.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-minimal.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs"],"sourcesContent":["import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\n\n/**\n * @public\n */\nconst m = createMotionProxy(createDomMotionConfig);\n\nexport { m };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n"],"names":["useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","LayoutGroupContext","createContext","useConstant","init","ref","useRef","current","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","useCreateMotionContext","props","initial","animate","context","isControllingVariants","isVariantLabel","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","Array","isArray","join","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","LazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","Boolean","optimizedAppearDataAttribute","window","HandoffComplete","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","strict","React","Provider","value","useCallback","instance","mount","unmount","isRefObject","useMotionRef","_ref2","layoutGroupId","id","createHtmlRenderState","style","transform","transformOrigin","vars","copyRawValuesOnly","target","source","key","isMotionValue","isForcedMotionValue","useStyle","Object","assign","transformTemplate","state","buildHTMLStyles","enableHardwareAcceleration","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","drag","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","Set","isValidMotionProp","startsWith","has","shouldForward","isValidProp","require","default","_a","createSvgRenderState","attrs","useSVGProps","_isStatic","visualProps","buildSVGAttrs","isSVGTag","rawStyles","createUseRender","forwardMotionProps","arguments","length","latestValues","isSVGComponent","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","get","createElement","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","onMount","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isVariantNode","isInitialAnimationBlocked","variantToSet","isAnimationControls","forEach","definition","resolved","resolveVariantFromProps","transitionEnd","transition","valueTarget","svgMotionConfig","frame","read","dimensions","getBBox","getBoundingClientRect","e","x","y","width","height","tagName","renderSVG","htmlMotionConfig","m","createConfig","custom","Proxy","componentCache","Map","_target","set","createMotionProxy"],"sourceRoot":""}